{"version":3,"sources":["pages/volumn-price/configs.js","utils/common.js","pages/volumn-price/components/VPARecorderForm.jsx","pages/volumn-price/components/VPARecorder.jsx","pages/volumn-price/components/VPAChart.jsx","pages/volumn-price/components/VPAScreen.jsx","pages/volumn-price/volumn-price-analysis.js","pages/home.jsx","App.js","serviceWorker.js","index.js"],"names":["volumnTabList","key","tab","minuteSteps","getVPatTime","localStorage","getItem","setItem","JSON","stringify","parse","sortArrByMoment","arr","sort","a","b","console","log","moment","unix","timeStamp","format","Number","algorithmV1","i","closePrice","openPrice","fixedVolumn","highestPrice","lowestPrice","volumns","layout","labelCol","span","wrapperCol","tailLayout","offset","numberRequireRules","required","message","type","initialValues","VPARecorderForm","props","showAddVPA","volumnTabKey","onToggleShowVPA","updateData","Form","useForm","form","visible","title","onCancel","maskClosable","footer","onClick","name","onFinish","value","VPAtime","setVPatTime","onFinishFailed","Item","label","rules","placeholder","className","minuteStep","normalize","dependencies","getFieldValue","validator","rule","Promise","resolve","reject","htmlType","resetFields","VPARecorder","clearData","useState","setShowAddVPA","shape","icon","PlusOutlined","onConfirm","okText","cancelText","DeleteOutlined","VPAChart","VPAScreen","data","deleteData","splice","setVPatTimeByArr","map","item","valueStyle","fixVolumn","color","prefix","ArrowUpOutlined","ArrowDownOutlined","Grid","moveVolumn","precision","VolumnPriceAnalysis","setVolumnTabKey","chartData","setChartData","onGetChartData","useCallback","el","addMoveVolumnFunc","useEffect","tabList","activeTabKey","onTabChange","removeItem","withRouter","App","exact","path","component","Home","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.7d770fd5.chunk.js","sourcesContent":["const volumnTabList = [\n  // {\n  //   key: '1min',\n  //   tab: '1分钟线',\n  // },\n  {\n    key: '5mins',\n    tab: '5分钟线',\n  },\n  // {\n  //   key: '15mins',\n  //   tab: '15分钟线',\n  // },\n]\n\nconst minuteSteps = {\n  '1min': 1,\n  '5mins': 5,\n  '15mins': 15\n}\n\nconst lintChartOptions = {}\n\nexport {volumnTabList, minuteSteps, lintChartOptions}","import moment from 'moment'\n\n// 增加一项\nconst setVPatTime = (value) => {\n  let VPAtime = JSON.stringify(\n    sortArrByMoment(\n      [\n        ...(getVPatTime() || []),\n        {...value}\n      ]\n    )\n  )\n  localStorage.setItem('VPAtime', VPAtime)\n}\n// 直接设置数组，慎用\nconst setVPatTimeByArr = (arr) => {\n  let VPAtime = JSON.stringify(\n    sortArrByMoment(arr)\n  )\n  localStorage.setItem('VPAtime', VPAtime)\n}\nconst getVPatTime = () => {\n  if((!localStorage.getItem('VPAtime')) || (localStorage.getItem('VPAtime')==='undefined')){\n    localStorage.setItem('VPAtime', JSON.stringify([]))\n  }\n  return JSON.parse(localStorage.getItem('VPAtime'))\n}\n\nconst deleteVPatTime = () => {\n  localStorage.removeItem('VPAtime')\n}\n\nconst sortArrByMoment = (arr=[]) => {\n  // 按照最新时间排序\n  arr.sort((a, b)=>{\n    console.log(moment.unix(a.timeStamp).format('X'))\n    return Number(moment.unix(a.timeStamp).format('X')) - Number(moment.unix(b.timeStamp).format('X'))\n  })\n  return arr\n}\n\n/**\n * @param {array} arr\n */\n\nconst addMoveVolumnFunc = (arr) => {\n  // volumns: 0,\n  // lowestPrice: 0,\n  // highestPrice: 0,\n  // closePrice: 0,\n  // openPrice: 0\n  // console.log(arr)\n  let moveVolumnArr = []\n  moveVolumnArr = arr.map((el, i) => {\n    if(i === 0) {\n      return {\n        ...el,\n        moveVolumn: '非连续起点',\n        fixVolumn: fixedVolumn(el.value)\n      }\n    }\n    if(Number(el.timeStamp) - Number(arr[i-1].timeStamp) !== 300 ) {\n      return {\n        ...el,\n        moveVolumn: '非连续起点',\n        fixVolumn: fixedVolumn(el.value)\n      }\n    }\n    return {\n      ...el,\n      moveVolumn: algorithmV1(el.value) / algorithmV1(arr[i-1].value),\n      fixVolumn: fixedVolumn(el.value)\n    }\n  })\n  return moveVolumnArr || []\n}\n// confidential core\nconst algorithmV1 = (i) => (Number(i.closePrice) - Number(i.openPrice)) / fixedVolumn(i)\n\nconst fixedVolumn = (i) => {\n  return (\n    (Number(i.closePrice) - Number(i.openPrice)) /\n    (Number(i.highestPrice) - Number(i.lowestPrice)) *\n    Number(i.volumns)\n  )\n}\n\nexport {setVPatTime, getVPatTime, addMoveVolumnFunc, deleteVPatTime, setVPatTimeByArr}","import React from 'react';\nimport { Button, Modal, Form, Input, TimePicker } from 'antd';\nimport {minuteSteps} from '../configs'\nimport moment from 'moment'\nimport {setVPatTime} from '../../../utils/common'\n\nimport './VPA.css'\n\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 16 },\n}\nconst tailLayout = {\n  wrapperCol: { offset: 6, span: 16 },\n}\nconst numberRequireRules = [\n  {required: true, message: '必填'},\n  {type: 'number', message: '请输入数字'}\n]\nconst initialValues = {\n  timeStamp: moment('00:00', 'HH:mm'),\n  // volumns: 0,\n  // lowestPrice: 0,\n  // highestPrice: 0,\n  // closePrice: 0,\n  // openPrice: 0\n}\n\nfunction VPARecorderForm(props) {\n  const { showAddVPA, volumnTabKey, onToggleShowVPA, updateData = ()=>{} } = props\n  const [form] = Form.useForm()\n  let handleConfirmRecord = () => {\n    onToggleShowVPA()\n  }\n  let onFinish = (value) => {\n    setVPatTime({ value: {...value}, timeStamp: moment(value.timeStamp).format('X')})\n    onToggleShowVPA()\n    updateData()\n  }\n  let onFinishFailed = () => {}\n  const onReset = () => {\n    form.resetFields()\n  }\n\n  return (\n    <>\n      <Modal\n        visible={showAddVPA}\n        title=\"增加一条VP\"\n        onCancel={onToggleShowVPA}\n        maskClosable={false}\n        footer={[\n          <Button key=\"back\" onClick={onToggleShowVPA}>\n            取消\n            </Button>\n        ]}\n      >\n        <Form\n        {...layout}\n        form={form}\n        name=\"VPRecorderForm\"\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        initialValues={initialValues}\n        >\n          <Form.Item\n              label=\"时间\"\n              name=\"timeStamp\"\n              rules={[{ required: true, message: 'Please input your username!' }]}\n            >\n            <TimePicker placeholder=\"\" className=\"form-width-full-fixer\" minuteStep={minuteSteps[volumnTabKey]} format=\"HH:mm\" />\n          </Form.Item>\n          <Form.Item\n            label=\"开价\"\n            name=\"openPrice\"\n            normalize={Number}\n            rules={[...numberRequireRules]}\n          >\n            <Input type=\"number\" />\n          </Form.Item>\n          <Form.Item\n            label=\"收价\"\n            name=\"closePrice\"\n            normalize={Number}\n            rules={[...numberRequireRules]}\n          >\n            <Input type=\"number\" />\n          </Form.Item>\n          <Form.Item\n            label=\"最高价\"\n            name=\"highestPrice\"\n            normalize={Number}\n            dependencies={['lowestPrice']}\n            rules={[\n              ...numberRequireRules,\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  if (!value || Number(getFieldValue('lowestPrice') || 0) <= Number(value)) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject('最低价不能高于最高价');\n                },\n              })\n            ]}\n          >\n            <Input type=\"number\" />\n          </Form.Item>\n          <Form.Item\n            label=\"最低价\"\n            name=\"lowestPrice\"\n            normalize={Number}\n            dependencies={['highestPrice']}\n            rules={[\n              ...numberRequireRules,\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  if (!value || Number(getFieldValue('highestPrice') || 0) >= Number(value)) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject('最低价不能高于最高价');\n                },\n              })\n            ]}\n          >\n            <Input type=\"number\" />\n          </Form.Item>\n          <Form.Item\n            label=\"量级\"\n            name=\"volumns\"\n            normalize={Number}\n            rules={[...numberRequireRules]}\n          >\n            <Input type=\"number\" />\n          </Form.Item>\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"form-button-bottom-common\">\n              提交\n            </Button>\n            <Button htmlType=\"button\" onClick={onReset}>\n              重填\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  )\n}\n\nexport default VPARecorderForm\n","import React, {useState} from 'react';\nimport {Button, Popconfirm} from 'antd';\nimport {PlusOutlined, DeleteOutlined} from '@ant-design/icons';\nimport VPARecorderForm from './VPARecorderForm'\nimport './VPA.css'\n\nfunction VPARecorder(props) {\n  let {volumnTabKey = '5mins', clearData = () => {}, updateData = () => {}} = props\n  const [showAddVPA, setShowAddVPA] = useState(false)\n  let onToggleShowVPA = ()=>{\n    setShowAddVPA(!showAddVPA)\n  }\n  return (\n    <div>\n      <div className=\"add-vpa-container\">\n        <Button className=\"form-button-bottom-common\" type=\"primary\" shape=\"round\" icon={<PlusOutlined />} onClick={onToggleShowVPA}>\n          增加数据\n        </Button>\n        <Popconfirm\n          title=\"清空数据需要重新录入，是否继续？\"\n          onConfirm={clearData}\n          okText=\"确定\"\n          cancelText=\"取消\"\n        >\n          <Button className=\"form-button-bottom-common\" type=\"danger\" shape=\"round\" icon={<DeleteOutlined />}>\n            清空数据\n          </Button>\n        </Popconfirm>\n        <VPARecorderForm showAddVPA={showAddVPA} volumnTabKey={volumnTabKey} onToggleShowVPA={onToggleShowVPA} updateData={updateData}/>\n      </div>\n    </div>\n  );\n}\n\nexport default VPARecorder;\n","import React, {useEffect, useCallback} from 'react';\nimport { Column } from '@antv/g2plot'\n\nfunction VPAChart(props) {\n  const {data} = props\n  let chartData = data\n  let renderChart = useCallback(()=>{\n    const linePlot = new Column('chart-area', {\n      chartData,\n      xField: 'timestamp',\n      yField: 'data',\n    });\n    linePlot.render()\n  }, [chartData])\n  useEffect(()=>{\n    renderChart()\n  })\n\n  return (\n    <div className=\"App\">\n      <div id=\"chart-area\"></div>\n    </div>\n  );\n}\n\nexport default VPAChart\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Card, List, Statistic, Popconfirm } from 'antd';\nimport { ArrowUpOutlined, ArrowDownOutlined, DeleteOutlined } from '@ant-design/icons';\nimport {getVPatTime, setVPatTimeByArr} from '../../../utils/common.js'\n\nimport moment from 'moment'\n\nfunction VPAScreen(props) {\n  let { data, updateData } = props\n  let deleteData = (i) => {\n    let arr = getVPatTime()\n    arr.splice(i, 1)\n    setVPatTimeByArr(arr)\n    updateData()\n  }\n  const generateData = () => {\n    return data.map((item, i) => {\n      let valueStyle = Number(item.fixVolumn) > 0 ? { color: '#3f8600' } : { color: '#cf1322' }\n      let prefix = Number(item.fixVolumn) > 0 ? <ArrowUpOutlined /> : <ArrowDownOutlined />\n      return (\n        <Card.Grid\n          key={item.timeStamp + 'index' + i}\n          className=\"screen-card-container\">\n          <Statistic\n            title={moment.unix((Number(item.timeStamp, 'X'))).format('HH:mm')}\n            value={item.moveVolumn}\n            precision={2}\n            valueStyle={valueStyle}\n            prefix={prefix}\n          />\n          <Popconfirm\n          title=\"清空数据需要重新录入，是否继续？\"\n          onConfirm={()=>{deleteData(i)}}\n          okText=\"确定\"\n          cancelText=\"取消\"\n          >\n            <DeleteOutlined />\n          </Popconfirm>\n        </Card.Grid>\n      )\n    }\n    )\n  }\n  return (\n    <div className=\"screen-container\">\n      {generateData()}\n    </div>\n  );\n}\n\nexport default VPAScreen;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Card } from 'antd';\nimport VPARecorder from './components/VPARecorder'\nimport VPAChart from './components/VPAChart'\nimport VPAScreen from './components/VPAScreen'\nimport { getVPatTime, addMoveVolumnFunc, deleteVPatTime} from '../../utils/common'\n\n\nimport { volumnTabList } from './configs'\nimport './vpa.css'\n\nfunction VolumnPriceAnalysis() {\n  let [volumnTabKey, setVolumnTabKey] = useState('5mins')\n  let [chartData, setChartData] = useState([])\n  let onTabChange = (key) => {\n    setVolumnTabKey(key)\n  };\n  let onGetChartData = useCallback(() => {\n    let arr = getVPatTime()\n    setChartData(\n      addMoveVolumnFunc(arr)\n    )\n  }, [getVPatTime])\n  let onClearVPAData = () => {\n    deleteVPatTime()\n    onGetChartData()\n  }\n  useEffect(()=>{\n    onGetChartData()\n  }, [onGetChartData])\n\n  return (\n    <div className=\"vpaContainer\">\n      <Card\n        title=\"走势分析\"\n        tabList={volumnTabList}\n        activeTabKey={volumnTabKey}\n        onTabChange={onTabChange}>\n        <VPARecorder volumnTabKey={volumnTabKey} clearData={onClearVPAData} updateData={onGetChartData} />\n        <VPAScreen data={chartData} updateData={onGetChartData}/>\n      </Card>\n    </div>\n  );\n}\n\nexport default VolumnPriceAnalysis;\n","import React from 'react'\nimport {withRouter} from 'react-router-dom'\nimport VolumnPriceAnalysis from './volumn-price/volumn-price-analysis'\n\nfunction Home(props) {\n  return (\n    <div>\n      <VolumnPriceAnalysis />\n    </div>\n  )\n}\n\nexport default withRouter(Home)\n","import React from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Home from './pages/home'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path='/home' component={Home}></Route>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}